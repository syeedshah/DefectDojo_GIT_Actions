# This is a basic workflow to help you get started with Actions

name: CI CD pipeline

env:
  DefectDojo_URL: "http://52.56.80.2:8080"
  DefectDojo_PROJ_ID: 1

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Security Tools
        run: |
          pip3 install trufflehog safety bandit checkov
          sudo apt-get install nikto -y

      # Runs a set of commands using the runners shell
      - name: Run secret scan with trufflehog
        run: trufflehog --regex --json --entropy=False . > trufflehog.json

      - name: Run SCA scan safety
        run: safety check -r app/requirements.txt --json > safety.json

      - name: Run SAST with bandit
        run: bandit -r -f json -o bandit.json app/ || true

      - name: Run Dockerfile scan with checkov
        run: checkov -d app/ --framework dockerfile -o json || true > checkov.json

      - name: Run DAST scan with nikto
        run: |
          cd app && pip install -r requirements.txt && python app.py &
          sleep 5
          nikto -h http://127.0.0.1:5000 -output nikto.xml || true

      - name: Upload results to defectdojo
        env:
          DD_API_TOKEN: ${{ secrets.DD_API_TOKEN }}
        run: |
          curl -h
          code=$(curl -s -o /dev/null -w "%{http_code}" "http://52.56.80.2:8080")
          echo "got code: $code"
          if [[ $code == 302 ]]; then
            echo "Uploading checkov scan.."
            curl -X 'POST' \
              'http://52.56.80.2:8080/api/v2/import-scan/' \
              -H 'accept: application/json' \
              -H 'Authorization: Token f3b8ad021c80beb079c52883644e5a067552aa8d' \
              -H 'Content-Type: multipart/form-data' \
              -H 'X-CSRFTOKEN: ZDwvnUvyx7VNsczq053tCPr9hW89TAWZBDyu7H0pvPOyPwtQgu61KbBvMcdwVarT' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'active=true' \
              -F 'endpoint_to_add=' \
              -F 'verified=true' \
              -F 'close_old_findings=false' \
              -F 'test_title=' \
              -F 'build_id=' \
              -F 'deduplication_on_engagement=' \
              -F 'push_to_jira=false' \
              -F 'minimum_severity=Info' \
              -F 'close_old_findings_product_scope=false' \
              -F 'scan_date=2023-05-18' \
              -F 'create_finding_groups_for_all_findings=true' \
              -F 'engagement_end_date=' \
              -F 'environment=' \
              -F 'service=' \
              -F 'commit_hash=' \
              -F 'group_by=' \
              -F 'version=' \
              -F 'tags=checkov' \
              -F 'api_scan_configuration=' \
              -F 'file=@checkov.json;type=application/json' \
              -F 'auto_create_context=' \
              -F 'lead=' \
              -F 'scan_type=Checkov Scan' \
              -F 'branch_tag=' \
              -F 'source_code_management_uri=' \
              -F 'engagement='
          fi
          if [[ $code == 302 ]]; then
            echo "Uploading bandit scan.."
            curl -X 'POST' \
              'http://52.56.80.2:8080/api/v2/import-scan/' \
              -H 'accept: application/json' \
              -H 'Authorization: f3b8ad021c80beb079c52883644e5a067552aa8d' \
              -H 'Content-Type: multipart/form-data' \
              -H 'X-CSRFToken: ZDwvnUvyx7VNsczq053tCPr9hW89TAWZBDyu7H0pvPOyPwtQgu61KbBvMcdwVarT' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'minimum_severity=Info' \
              -F 'active=false' \
              -F 'verified=false' \
              -F 'scan_type=Bandit Scan' \
              -F 'file=@bandit.json;type=application/json' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'close_old_findings=false' \
              -F 'close_old_findings_product_scope=false' \
              -F 'push_to_jira=false' \
              -F 'create_finding_groups_for_all_findings=true'
          fi
          if [[ $code == 302 ]]; then
            echo "Uploading nikto scan.."
            curl -X 'POST' \
              'http://52.56.80.2:8080/api/v2/import-scan/' \
              -H 'accept: application/json' \
              -H 'Content-Type: multipart/form-data' \
              -H 'Authorization: Token f3b8ad021c80beb079c52883644e5a067552aa8d' \
              -H 'X-CSRFTOKEN: ZDwvnUvyx7VNsczq053tCPr9hW89TAWZBDyu7H0pvPOyPwtQgu61KbBvMcdwVarT' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'active=true' \
              -F 'endpoint_to_add=' \
              -F 'verified=true' \
              -F 'close_old_findings=false' \
              -F 'test_title=' \
              -F 'build_id=' \
              -F 'deduplication_on_engagement=' \
              -F 'push_to_jira=false' \
              -F 'minimum_severity=Info' \
              -F 'close_old_findings_product_scope=false' \
              -F 'scan_date=2023-05-18' \
              -F 'create_finding_groups_for_all_findings=true' \
              -F 'engagement_end_date=' \
              -F 'environment=' \
              -F 'service=' \
              -F 'commit_hash=' \
              -F 'group_by=' \
              -F 'version=' \
              -F 'tags=nikto' \
              -F 'api_scan_configuration=' \
              -F 'file=@nikto.xml;type=application/json' \
              -F 'auto_create_context=' \
              -F 'lead=' \
              -F 'scan_type=Nikto Scan' \
              -F 'branch_tag=' \
              -F 'source_code_management_uri=' \
              -F 'engagement='
          fi
          if [[ $code == 302 ]]; then
            echo "Uploading trufflehog scan.."
            curl -X 'POST' \
              'http://52.56.80.2:8080/api/v2/import-scan/' \
              -H 'accept: application/json' \
              -H 'Content-Type: multipart/form-data' \
              -H 'Authorization: Token f3b8ad021c80beb079c52883644e5a067552aa8d' \
              -H 'X-CSRFTOKEN: VZcysZ0DR51ox9aNHM4ASbEfVaGjve0tPx5toRDClZp6faTFUon9KvSpOJ3UaHQI' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'active=true' \
              -F 'endpoint_to_add=' \
              -F 'verified=true' \
              -F 'close_old_findings=false' \
              -F 'test_title=' \
              -F 'build_id=' \
              -F 'deduplication_on_engagement=' \
              -F 'push_to_jira=false' \
              -F 'minimum_severity=Info' \
              -F 'close_old_findings_product_scope=false' \
              -F 'scan_date=2023-05-18' \
              -F 'create_finding_groups_for_all_findings=true' \
              -F 'engagement_end_date=' \
              -F 'environment=' \
              -F 'service=' \
              -F 'commit_hash=' \
              -F 'group_by=' \
              -F 'version=' \
              -F 'tags=trufflehog' \
              -F 'api_scan_configuration=' \
              -F 'file=@trufflehog.json;type=application/json' \
              -F 'auto_create_context=' \
              -F 'lead=' \
              -F 'scan_type=Trufflehog Scan' \
              -F 'branch_tag=' \
              -F 'source_code_management_uri=' \
              -F 'engagement='
          fi
          if [[ $code == 302 ]]; then
            echo "Uploading safety scan.."
            curl -X 'POST' \
              'http://52.56.80.2:8080/api/v2/import-scan/' \
              -H 'accept: application/json' \
              -H 'Authorization: Token f3b8ad021c80beb079c52883644e5a067552aa8d' \
              -H 'Content-Type: multipart/form-data' \
              -H 'X-CSRFTOKEN: VZcysZ0DR51ox9aNHM4ASbEfVaGjve0tPx5toRDClZp6faTFUon9KvSpOJ3UaHQI' \
              -F 'product_type_name=Mateco_BE' \
              -F 'product_name=Q Service App' \
              -F 'engagement_name=Sprint 1' \
              -F 'active=true' \
              -F 'endpoint_to_add=' \
              -F 'verified=true' \
              -F 'close_old_findings=false' \
              -F 'test_title=' \
              -F 'build_id=' \
              -F 'deduplication_on_engagement=' \
              -F 'push_to_jira=false' \
              -F 'minimum_severity=Info' \
              -F 'close_old_findings_product_scope=false' \
              -F 'scan_date=2023-05-18' \
              -F 'create_finding_groups_for_all_findings=true' \
              -F 'engagement_end_date=' \
              -F 'environment=' \
              -F 'service=' \
              -F 'commit_hash=' \
              -F 'group_by=' \
              -F 'version=' \
              -F 'tags=safety' \
              -F 'api_scan_configuration=' \
              -F 'file=@safety.json;type=application/json' \
              -F 'auto_create_context=' \
              -F 'lead=' \
              -F 'scan_type=Safety Scan' \
              -F 'branch_tag=' \
              -F 'source_code_management_uri=' \
              -F 'engagement='
          fi
